{"version":3,"file":"static/js/827.b71c43f5.js","mappings":"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","sources":["webpack://frontend/./src/views/Browseprogress/Powerline_228KV_Details.vue","webpack://frontend/./src/views/Browseprogress/Powerline_228KV_Details.vue?238e"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <!-- 標題 -->\r\n    <div class=\"mb-3\" style=\"padding-left: 20px; display: flex; align-items: center\">\r\n      <v-icon color=\"blue\">mdi-chevron-right-box</v-icon>\r\n      <span class=\"font-weight-bold ml-2\">瀏覽22.8KV工程進度：</span>\r\n    </div>\r\n\r\n    <!-- 功能列 -->\r\n    <div class=\"function-row\">\r\n      <!-- 第一個區塊 -->\r\n      <div class=\"status-and-page-size-selector\">\r\n        <span>狀態：</span>\r\n        <v-btn\r\n          :class=\"displayMode === 'table' ? 'report-btn' : 'table-btn'\"\r\n          @click=\"toggleDisplayMode\"\r\n          >{{ displayModeText }}</v-btn\r\n        >\r\n      </div>\r\n\r\n      <!-- 第二個區塊 -->\r\n      <div v-if=\"showDetails && displayMode === 'table'\" class=\"py-2 d-flex justify-center\">\r\n        <v-btn-toggle mandatory v-model=\"timeMode\" class=\"time-toggle\" variant=\"outlined\">\r\n          <v-btn value=\"quarter\">季</v-btn>\r\n          <v-btn value=\"week\">週</v-btn>\r\n        </v-btn-toggle>\r\n      </div>\r\n\r\n      <!-- 第三個區塊 -->\r\n      <div v-if=\"displayMode === 'table'\">\r\n        <v-btn\r\n          :class=\"projectType === 'engineering' ? 'bank-btn' : 'engineering-btn'\"\r\n          @click=\"toggleProjectType\"\r\n          >{{ projectTypeText }}</v-btn\r\n        >\r\n        <!-- <v-btn\r\n          v-if=\"projectType === 'engineering'\"\r\n          class=\"custom-btn\"\r\n          @click=\"scrollToSection('engineeringSection')\"\r\n        >\r\n          土木/纜線進度\r\n        </v-btn> -->\r\n        <v-btn class=\"overview-btn\" rounded=\"0\" @click=\"showDetails = false\">即時</v-btn>\r\n        <v-btn class=\"details-btn\" rounded=\"0\" @click=\"showDetails = true\">詳情</v-btn>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 周數據展示 -->\r\n    <div class=\"div-container\" v-if=\"timeMode === 'week' && showDetails && displayMode === 'table'\">\r\n      <WeekLoopTable :allDateRanges=\"paginatedDateRanges\" :weekTableData=\"paginatedData\" />\r\n      <v-pagination v-model=\"currentPage\" :length=\"totalPages\"></v-pagination>\r\n    </div>\r\n\r\n    <!-- 季數據展示 -->\r\n    <div\r\n      class=\"div-container\"\r\n      v-if=\"timeMode === 'quarter' && showDetails && displayMode === 'table'\"\r\n    >\r\n      <AllQuarterLoopTable\r\n        :allDateRanges=\"paginatedDateRanges\"\r\n        :quarterSummary=\"quarterSummary\"\r\n        :quarterTableData=\"paginatedData\"\r\n      />\r\n      <v-pagination v-model=\"currentPage\" :length=\"totalPages\"></v-pagination>\r\n    </div>\r\n\r\n    <!-- 即時數據展示 -->\r\n    <div class=\"div-container\" v-if=\"!showDetails && displayMode === 'table'\">\r\n      <QuarterLoopTable\r\n        :allDateRanges=\"paginatedDateRanges\"\r\n        :quarterSummary=\"quarterSummary\"\r\n        :TableData=\"paginatedData\"\r\n      />\r\n      <v-pagination v-model=\"currentPage\" :length=\"totalPages\"></v-pagination>\r\n    </div>\r\n\r\n    <!-- 案場即時報表展示 -->\r\n    <div\r\n      class=\"div-container report-container\"\r\n      v-if=\"displayMode === 'report' && !showDetails\"\r\n      style=\"background-color: white; display: flex; height: 100%\"\r\n    >\r\n      <SiteSelectionChart :chartData=\"chartData\" />\r\n    </div>\r\n\r\n    <!-- 案場所有季報表展示 -->\r\n    <div\r\n      class=\"div-container report-container\"\r\n      v-if=\"displayMode === 'report' && showDetails && timeMode === 'quarter'\"\r\n      style=\"background-color: white; display: flex; height: 100%\"\r\n    >\r\n      <SiteSelectionChart :chartData=\"chartData\" />\r\n    </div>\r\n\r\n    <!-- 案場所有周報表展示 -->\r\n    <div\r\n      class=\"div-container report-container\"\r\n      v-if=\"displayMode === 'report' && showDetails && timeMode === 'week'\"\r\n      style=\"background-color: white; display: flex; height: 100%\"\r\n    >\r\n      <SiteSelectionChart :chartData=\"chartData\" />\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport SiteSelectionChart from \"@/components/chart/SiteSelectionChart.vue\";\r\nimport WeekLoopTable from \"@/components/table/weekLoopTable.vue\";\r\nimport AllQuarterLoopTable from \"@/components/table/allQuarterLoopTable.vue\";\r\nimport QuarterLoopTable from \"@/components/table/quarterLoopTable.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    WeekLoopTable,\r\n    AllQuarterLoopTable,\r\n    QuarterLoopTable,\r\n    SiteSelectionChart,\r\n  },\r\n  data() {\r\n    return {\r\n      tab: \"civil\",\r\n      timeMode: \"week\",\r\n      entimeMode: \"week\",\r\n      displayMode: \"table\",\r\n      endisplayMode: \"table\",\r\n      projectType: \"engineering\",\r\n      showDetails: false,\r\n      enshowDetails: false,\r\n      weekTableData: [\r\n        { actual: 0, date_range: \"2024-01-07 - 2024-01-13\", expected: 0.0238, loop_name: \"SN1\" },\r\n        { actual: 0, date_range: \"2024-01-07 - 2024-01-13\", expected: 0.0238, loop_name: \"SN2\" },\r\n        { actual: 0, date_range: \"2024-01-14 - 2024-01-20\", expected: 0.0476, loop_name: \"SN1\" },\r\n        { actual: 0, date_range: \"2024-01-14 - 2024-01-20\", expected: 0.0476, loop_name: \"SN2\" },\r\n        {\r\n          actual: 0.441,\r\n          date_range: \"2024-01-21 - 2024-01-27\",\r\n          expected: 0.0714,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.4007,\r\n          date_range: \"2024-01-21 - 2024-01-27\",\r\n          expected: 0.0714,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.441,\r\n          date_range: \"2024-01-28 - 2024-02-03\",\r\n          expected: 0.0952,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.4007,\r\n          date_range: \"2024-01-28 - 2024-02-03\",\r\n          expected: 0.0952,\r\n          loop_name: \"SN2\",\r\n        },\r\n        { actual: 0.441, date_range: \"2024-02-04 - 2024-02-10\", expected: 0.119, loop_name: \"SN1\" },\r\n        {\r\n          actual: 0.4007,\r\n          date_range: \"2024-02-04 - 2024-02-10\",\r\n          expected: 0.119,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.441,\r\n          date_range: \"2024-02-11 - 2024-02-17\",\r\n          expected: 0.1429,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.4007,\r\n          date_range: \"2024-02-11 - 2024-02-17\",\r\n          expected: 0.1429,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.441,\r\n          date_range: \"2024-02-18 - 2024-02-24\",\r\n          expected: 0.1667,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.4007,\r\n          date_range: \"2024-02-18 - 2024-02-24\",\r\n          expected: 0.1667,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.4463,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.4081,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN2\",\r\n        },\r\n      ], //周數據\r\n      quarterTableData: [\r\n        {\r\n          actual: 0.4463,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN1\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n        {\r\n          actual: 0.4081,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN2\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n      ], //季數據\r\n      TableData: [\r\n        {\r\n          actual: 0.4463,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN1\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n        {\r\n          actual: 0.4081,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN2\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n      ],\r\n      civilweekTableData: [\r\n        { actual: 0, date_range: \"2024-01-07 - 2024-01-13\", expected: 0.0476, loop_name: \"SN1\" },\r\n        { actual: 0, date_range: \"2024-01-07 - 2024-01-13\", expected: 0.0476, loop_name: \"SN2\" },\r\n        { actual: 0, date_range: \"2024-01-14 - 2024-01-20\", expected: 0.0952, loop_name: \"SN1\" },\r\n        { actual: 0, date_range: \"2024-01-14 - 2024-01-20\", expected: 0.0952, loop_name: \"SN2\" },\r\n        {\r\n          actual: 0.8819,\r\n          date_range: \"2024-01-21 - 2024-01-27\",\r\n          expected: 0.1429,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8013,\r\n          date_range: \"2024-01-21 - 2024-01-27\",\r\n          expected: 0.1429,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.8819,\r\n          date_range: \"2024-01-28 - 2024-02-03\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8013,\r\n          date_range: \"2024-01-28 - 2024-02-03\",\r\n          expected: 0.1905,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.8819,\r\n          date_range: \"2024-02-04 - 2024-02-10\",\r\n          expected: 0.2381,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8013,\r\n          date_range: \"2024-02-04 - 2024-02-10\",\r\n          expected: 0.2381,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.8819,\r\n          date_range: \"2024-02-11 - 2024-02-17\",\r\n          expected: 0.2857,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8013,\r\n          date_range: \"2024-02-11 - 2024-02-17\",\r\n          expected: 0.2857,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.8819,\r\n          date_range: \"2024-02-18 - 2024-02-24\",\r\n          expected: 0.3333,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8013,\r\n          date_range: \"2024-02-18 - 2024-02-24\",\r\n          expected: 0.3333,\r\n          loop_name: \"SN2\",\r\n        },\r\n        {\r\n          actual: 0.8926,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN1\",\r\n        },\r\n        {\r\n          actual: 0.8162,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN2\",\r\n        },\r\n      ], //周數據\r\n      civilquarterTableData: [\r\n        {\r\n          actual: 0.8926,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN1\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n        {\r\n          actual: 0.8162,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN2\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n      ], //季數據\r\n      civilTableData: [\r\n        {\r\n          actual: 0.8926,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN1\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n        {\r\n          actual: 0.8162,\r\n          date_range: \"2024-02-25 - 2024-03-02\",\r\n          expected: 0.381,\r\n          loop_name: \"SN2\",\r\n          year: 2024,\r\n          quarter: 1,\r\n          week: 9,\r\n        },\r\n      ],\r\n      currentPage: 1,\r\n      perPage: 3,\r\n      chartData: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n      enchartData: {\r\n        labels: [],\r\n        datasets: [],\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    endisplayMode() {\r\n      this.enupdateChartData();\r\n    },\r\n    entimeMode() {\r\n      this.enupdateChartData();\r\n    },\r\n    enshowDetails() {\r\n      this.enupdateChartData();\r\n    },\r\n    displayMode() {\r\n      this.updateChartData();\r\n    },\r\n    timeMode() {\r\n      this.updateChartData();\r\n    },\r\n    showDetails() {\r\n      this.updateChartData();\r\n    },\r\n  },\r\n  async created() {\r\n    this.selectedPlan = this.$route.query.Plan;\r\n    this.selectedProject = this.$route.query.Project;\r\n  },\r\n  mounted() {\r\n    this.updateChartData();\r\n    this.enupdateChartData();\r\n  },\r\n  computed: {\r\n    displayModeText() {\r\n      return this.displayMode === \"table\" ? \"表格\" : \"報表\";\r\n    },\r\n    endisplayModeText() {\r\n      return this.endisplayMode === \"table\" ? \"表格\" : \"報表\";\r\n    },\r\n    projectTypeText() {\r\n      return this.projectType === \"engineering\" ? \"工程\" : \"銀行\";\r\n    },\r\n    allDateRanges() {\r\n      const ranges = new Set();\r\n      this.organizedLoopsData.forEach((item) => {\r\n        item.date_ranges.forEach((range) => {\r\n          ranges.add(range.date_range);\r\n        });\r\n      });\r\n\r\n      return Array.from(ranges);\r\n    },\r\n    quarterSummary() {\r\n      let data = this.organizedLoopsData;\r\n      console.log(data);\r\n      if (!data.length) return [];\r\n\r\n      const summaries = new Set();\r\n\r\n      data.forEach((item) => {\r\n        item.date_ranges.forEach((range) => {\r\n          const identifier = `${range.year}-Q${range.quarter}-${range.week}`;\r\n\r\n          summaries.add(identifier);\r\n        });\r\n      });\r\n\r\n      return Array.from(summaries).map((summary) => {\r\n        const [year, quarter, week] = summary.split(\"-\");\r\n        return { year, quarter: quarter.replace(\"Q\", \"\"), week };\r\n      });\r\n    },\r\n    totalPages() {\r\n      const totalItems = this.allDateRanges.length;\r\n      return Math.ceil(totalItems / this.perPage);\r\n    },\r\n    paginatedData() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      const data = this.organizedLoopsData.map((loop) => ({\r\n        ...loop,\r\n        date_ranges: loop.date_ranges.slice(start, end),\r\n      }));\r\n      console.log(data);\r\n      return data;\r\n    },\r\n    paginatedDateRanges() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      return this.allDateRanges.slice(start, end);\r\n    },\r\n    organizedLoopsData() {\r\n      const organizedData = [];\r\n      const tempMap = new Map();\r\n\r\n      let dataSource = [];\r\n      if (!this.showDetails) {\r\n        dataSource = this.TableData;\r\n      } else {\r\n        if (this.timeMode === \"quarter\") {\r\n          dataSource = this.quarterTableData;\r\n        } else if (this.timeMode === \"week\") {\r\n          dataSource = this.weekTableData;\r\n        }\r\n      }\r\n\r\n      dataSource.forEach((item) => {\r\n        const { loop_name, date_range, actual, expected, year, quarter, week } = item;\r\n\r\n        if (!tempMap.has(loop_name)) {\r\n          tempMap.set(loop_name, { loop_name, date_ranges: [] });\r\n        }\r\n\r\n        const currentLoop = tempMap.get(loop_name);\r\n        let dateRangeObj = currentLoop.date_ranges.find((dr) => dr.date_range === date_range);\r\n        if (!dateRangeObj) {\r\n          dateRangeObj = { date_range, records: [], year, quarter, week };\r\n          currentLoop.date_ranges.push(dateRangeObj);\r\n        }\r\n\r\n        dateRangeObj.records.push({ actual, expected });\r\n      });\r\n\r\n      tempMap.forEach((value) => {\r\n        value.date_ranges.sort((a, b) => {\r\n          const aDate = new Date(a.date_range.split(\" - \")[0]);\r\n          const bDate = new Date(b.date_range.split(\" - \")[0]);\r\n          return aDate - bDate;\r\n        });\r\n        organizedData.push(value);\r\n      });\r\n\r\n      return organizedData;\r\n    },\r\n    enorganizedLoopsData() {\r\n      const enorganizedData = [];\r\n      const tempMap = new Map();\r\n\r\n      let dataSource = [];\r\n      if (this.tab === \"civil\") {\r\n        if (!this.enshowDetails) {\r\n          dataSource = this.civilTableData;\r\n        } else {\r\n          if (this.entimeMode === \"quarter\") {\r\n            dataSource = this.civilquarterTableData;\r\n          } else if (this.entimeMode === \"week\") {\r\n            dataSource = this.civilweekTableData;\r\n          }\r\n        }\r\n      }\r\n\r\n      dataSource.forEach((item) => {\r\n        const { loop_name, date_range, actual, expected, year, quarter, week } = item;\r\n\r\n        if (!tempMap.has(loop_name)) {\r\n          tempMap.set(loop_name, { loop_name, date_ranges: [] });\r\n        }\r\n\r\n        const currentLoop = tempMap.get(loop_name);\r\n        let dateRangeObj = currentLoop.date_ranges.find((dr) => dr.date_range === date_range);\r\n        if (!dateRangeObj) {\r\n          dateRangeObj = { date_range, records: [], year, quarter, week };\r\n          currentLoop.date_ranges.push(dateRangeObj);\r\n        }\r\n\r\n        dateRangeObj.records.push({ actual, expected });\r\n      });\r\n\r\n      tempMap.forEach((value) => {\r\n        value.date_ranges.sort((a, b) => {\r\n          const aDate = new Date(a.date_range.split(\" - \")[0]);\r\n          const bDate = new Date(b.date_range.split(\" - \")[0]);\r\n          return aDate - bDate;\r\n        });\r\n        enorganizedData.push(value);\r\n      });\r\n\r\n      return enorganizedData;\r\n    },\r\n    enallDateRanges() {\r\n      const ranges = new Set();\r\n      this.enorganizedLoopsData.forEach((item) => {\r\n        item.date_ranges.forEach((range) => {\r\n          ranges.add(range.date_range);\r\n        });\r\n      });\r\n\r\n      return Array.from(ranges);\r\n    },\r\n    enpaginatedDateRanges() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      return this.enallDateRanges.slice(start, end);\r\n    },\r\n    enquarterSummary() {\r\n      let data = this.enorganizedLoopsData;\r\n      console.log(data);\r\n      if (!data.length) return [];\r\n\r\n      const summaries = new Set();\r\n\r\n      data.forEach((item) => {\r\n        item.date_ranges.forEach((range) => {\r\n          const identifier = `${range.year}-Q${range.quarter}-${range.week}`;\r\n\r\n          summaries.add(identifier);\r\n        });\r\n      });\r\n\r\n      return Array.from(summaries).map((summary) => {\r\n        const [year, quarter, week] = summary.split(\"-\");\r\n        return { year, quarter: quarter.replace(\"Q\", \"\"), week };\r\n      });\r\n    },\r\n    enpaginatedData() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      const data = this.enorganizedLoopsData.map((loop) => ({\r\n        ...loop,\r\n        date_ranges: loop.date_ranges.slice(start, end),\r\n      }));\r\n      console.log(data);\r\n      return data;\r\n    },\r\n  },\r\n  methods: {\r\n    scrollToSection(refName) {\r\n      const element = this.$refs[refName];\r\n      if (element) {\r\n        const top = element.offsetTop - 100; // 减去50像素的偏移量\r\n        window.scrollTo({\r\n          top: top,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    },\r\n    // 切換顯示模式\r\n    toggleDisplayMode() {\r\n      if (this.displayMode === \"table\") {\r\n        this.previousTimeMode = this.timeMode;\r\n        this.previousShowDetails = this.showDetails;\r\n\r\n        this.displayMode = \"report\";\r\n      } else {\r\n        this.displayMode = \"table\";\r\n\r\n        this.timeMode = this.previousTimeMode;\r\n        this.showDetails = this.previousShowDetails;\r\n      }\r\n    },\r\n    // 切換項目類型\r\n    toggleProjectType() {\r\n      this.projectType = this.projectType === \"engineering\" ? \"bank\" : \"engineering\";\r\n    },\r\n    formatPercentage(value) {\r\n      return `${(Number(value) * 100).toFixed(2)}%`;\r\n    },\r\n    toggleEnDisplayMode() {\r\n      if (this.endisplayMode === \"table\") {\r\n        this.enpreviousTimeMode = this.entimeMode;\r\n        this.enpreviousShowDetails = this.enshowDetails;\r\n\r\n        this.endisplayMode = \"report\";\r\n      } else {\r\n        this.endisplayMode = \"table\";\r\n\r\n        this.entimeMode = this.enpreviousTimeMode;\r\n        this.enshowDetails = this.enpreviousShowDetails;\r\n      }\r\n    },\r\n    generateChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.TableData.filter((item) => item.year === currentYear);\r\n\r\n      const uniqueQuarters = new Set(filteredData.map((item) => `Q${item.quarter}`));\r\n      const labels = Array.from(uniqueQuarters).sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = `Q${item.quarter}`;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" },\r\n        { color: \"rgba(75, 192, 192, 0.2)\" },\r\n        { color: \"rgba(255, 206, 86, 0.2)\" },\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    generateyearChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.quarterTableData.filter((item) => item.year === currentYear);\r\n\r\n      const labels = [\r\n        ...new Set(filteredData.map((item) => `${item.year}Q${item.quarter}`)),\r\n      ].sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = `${item.year}Q${item.quarter}`;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" },\r\n        { color: \"rgba(75, 192, 192, 0.2)\" },\r\n        { color: \"rgba(255, 206, 86, 0.2)\" },\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    generatedaterangeChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.weekTableData;\r\n\r\n      const labels = [...new Set(filteredData.map((item) => item.date_range))].sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = item.date_range;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" }, // Red\r\n        { color: \"rgba(75, 192, 192, 0.2)\" }, // Green\r\n        { color: \"rgba(255, 206, 86, 0.2)\" }, // Yellow\r\n        { color: \"rgba(153, 102, 255, 0.2)\" }, // Purple\r\n        { color: \"rgba(255, 159, 64, 0.2)\" }, // Orange\r\n        { color: \"rgba(54, 162, 235, 0.2)\" }, // Blue\r\n        { color: \"rgba(104, 132, 245, 0.2)\" }, // Light blue\r\n        { color: \"rgba(164, 206, 78, 0.2)\" }, // Light green\r\n        { color: \"rgba(215, 86, 255, 0.2)\" }, // Magenta\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    updateChartData() {\r\n      if (!this.showDetails) {\r\n        this.chartData = this.generateChartData();\r\n      } else {\r\n        if (this.timeMode === \"quarter\") {\r\n          this.chartData = this.generateyearChartData();\r\n        } else if (this.timeMode === \"week\") {\r\n          this.chartData = this.generatedaterangeChartData();\r\n        }\r\n      }\r\n    },\r\n    engenerateChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.civilTableData.filter((item) => item.year === currentYear);\r\n\r\n      const uniqueQuarters = new Set(filteredData.map((item) => `Q${item.quarter}`));\r\n      const labels = Array.from(uniqueQuarters).sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = `Q${item.quarter}`;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" },\r\n        { color: \"rgba(75, 192, 192, 0.2)\" },\r\n        { color: \"rgba(255, 206, 86, 0.2)\" },\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    engenerateyearChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.civilquarterTableData.filter((item) => item.year === currentYear);\r\n\r\n      const labels = [\r\n        ...new Set(filteredData.map((item) => `${item.year}Q${item.quarter}`)),\r\n      ].sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = `${item.year}Q${item.quarter}`;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" },\r\n        { color: \"rgba(75, 192, 192, 0.2)\" },\r\n        { color: \"rgba(255, 206, 86, 0.2)\" },\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    engeneratedaterangeChartData() {\r\n      const currentYear = new Date().getFullYear();\r\n      const filteredData = this.civilweekTableData;\r\n\r\n      const labels = [...new Set(filteredData.map((item) => item.date_range))].sort();\r\n\r\n      const datasetMap = new Map();\r\n\r\n      filteredData.forEach((item) => {\r\n        const label = item.date_range;\r\n        const loopName = item.loop_name;\r\n\r\n        if (!datasetMap.has(loopName)) {\r\n          datasetMap.set(loopName, {\r\n            actual: Array(labels.length).fill(null),\r\n            expected: Array(labels.length).fill(null),\r\n          });\r\n        }\r\n\r\n        const loopData = datasetMap.get(loopName);\r\n        const index = labels.indexOf(label);\r\n        if (index !== -1) {\r\n          loopData.actual[index] = item.actual * 100;\r\n          loopData.expected[index] = item.expected * 100;\r\n        }\r\n      });\r\n\r\n      const colorPairs = [\r\n        { color: \"rgba(255, 99, 132, 0.2)\" }, // Red\r\n        { color: \"rgba(75, 192, 192, 0.2)\" }, // Green\r\n        { color: \"rgba(255, 206, 86, 0.2)\" }, // Yellow\r\n        { color: \"rgba(153, 102, 255, 0.2)\" }, // Purple\r\n        { color: \"rgba(255, 159, 64, 0.2)\" }, // Orange\r\n        { color: \"rgba(54, 162, 235, 0.2)\" }, // Blue\r\n        { color: \"rgba(104, 132, 245, 0.2)\" }, // Light blue\r\n        { color: \"rgba(164, 206, 78, 0.2)\" }, // Light green\r\n        { color: \"rgba(215, 86, 255, 0.2)\" }, // Magenta\r\n      ];\r\n      let colorIndex = 0;\r\n\r\n      const datasets = [];\r\n      datasetMap.forEach((data, loopName) => {\r\n        const color = colorPairs[colorIndex++ % colorPairs.length].color;\r\n        datasets.push({\r\n          label: `${loopName} Actual`,\r\n          data: data.actual,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderWidth: 5,\r\n        });\r\n        datasets.push({\r\n          label: `${loopName} Expected`,\r\n          data: data.expected,\r\n          backgroundColor: color,\r\n          borderColor: color.replace(\"0.2\", \"1\"),\r\n          borderDash: [5, 5],\r\n        });\r\n      });\r\n\r\n      return {\r\n        labels,\r\n        datasets,\r\n      };\r\n    },\r\n    enupdateChartData() {\r\n      if (!this.enshowDetails) {\r\n        this.enchartData = this.engenerateChartData();\r\n      } else {\r\n        if (this.entimeMode === \"quarter\") {\r\n          this.enchartData = this.engenerateyearChartData();\r\n        } else if (this.timeMode === \"week\") {\r\n          this.enchartData = this.engeneratedaterangeChartData();\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"@/assets/style/browseprogress.css\";\r\n\r\n:deep(.v-btn-toggle) {\r\n  padding: 2px 30px;\r\n  min-height: auto;\r\n  height: auto;\r\n}\r\n</style>\r\n","import { render } from \"./Powerline_228KV_Details.vue?vue&type=template&id=19f98912&scoped=true\"\nimport script from \"./Powerline_228KV_Details.vue?vue&type=script&lang=js\"\nexport * from \"./Powerline_228KV_Details.vue?vue&type=script&lang=js\"\n\nimport \"./Powerline_228KV_Details.vue?vue&type=style&index=0&id=19f98912&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19f98912\"]])\n\nexport default __exports__"],"names":["class","style","_createElementVNode","_createBlock","_component_v_container","_hoisted_1","_createVNode","_component_v_icon","color","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_v_btn","_normalizeClass","$data","displayMode","onClick","$options","toggleDisplayMode","displayModeText","showDetails","_createElementBlock","_hoisted_6","_component_v_btn_toggle","mandatory","timeMode","$event","variant","value","_hoisted_7","projectType","toggleProjectType","projectTypeText","rounded","_cache","_hoisted_8","_component_WeekLoopTable","allDateRanges","paginatedDateRanges","weekTableData","paginatedData","_component_v_pagination","currentPage","length","totalPages","_hoisted_9","_component_AllQuarterLoopTable","quarterSummary","quarterTableData","_hoisted_10","_component_QuarterLoopTable","TableData","_hoisted_11","_component_SiteSelectionChart","chartData","_hoisted_12","_hoisted_13","components","WeekLoopTable","AllQuarterLoopTable","QuarterLoopTable","SiteSelectionChart","data","tab","entimeMode","endisplayMode","enshowDetails","actual","date_range","expected","loop_name","year","quarter","week","civilweekTableData","civilquarterTableData","civilTableData","perPage","labels","datasets","enchartData","watch","this","enupdateChartData","updateChartData","created","selectedPlan","$route","query","Plan","selectedProject","Project","mounted","computed","endisplayModeText","ranges","Set","organizedLoopsData","forEach","item","date_ranges","range","add","Array","from","console","log","summaries","identifier","map","summary","split","replace","totalItems","Math","ceil","start","end","loop","slice","organizedData","tempMap","Map","dataSource","has","set","currentLoop","get","dateRangeObj","find","dr","records","push","sort","a","b","aDate","Date","bDate","enorganizedLoopsData","enorganizedData","enallDateRanges","enpaginatedDateRanges","enquarterSummary","enpaginatedData","methods","scrollToSection","refName","element","$refs","top","offsetTop","window","scrollTo","behavior","previousTimeMode","previousShowDetails","formatPercentage","Number","toFixed","toggleEnDisplayMode","enpreviousTimeMode","enpreviousShowDetails","generateChartData","currentYear","getFullYear","filteredData","filter","uniqueQuarters","datasetMap","label","loopName","fill","loopData","index","indexOf","colorPairs","colorIndex","backgroundColor","borderColor","borderWidth","borderDash","generateyearChartData","generatedaterangeChartData","engenerateChartData","engenerateyearChartData","engeneratedaterangeChartData","__exports__","render"],"sourceRoot":""}