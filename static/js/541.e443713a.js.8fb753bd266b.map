{"version":3,"file":"static/js/541.e443713a.js","mappings":"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","sources":["webpack://frontend/./src/components/chart/SiteSelectionChart.vue","webpack://frontend/./src/components/chart/Chart.vue","webpack://frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend/./node_modules/chart.js/dist/chart.js","webpack://frontend/./node_modules/chart.js/auto/auto.js","webpack://frontend/./src/components/chart/Chart.vue?eb38","webpack://frontend/./src/components/chart/SiteSelectionChart.vue?7e0c"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"sidebar\"\r\n    style=\"flex: 2; margin: 20px; display: flex; flex-direction: column; height: 500px\"\r\n  >\r\n    <div class=\"mb-3\" style=\"padding-left: 20px; align-items: center\">\r\n      <v-icon color=\"green\">mdi-chevron-right-box</v-icon>\r\n      <span class=\"font-weight-bold ml-2\">選擇案場：</span>\r\n      <div>\r\n        <span class=\"ml-1 note-span\">※可以透過點選取消與選擇案場</span>\r\n      </div>\r\n      <div>\r\n        <v-btn small color=\"primary\" @click=\"selectAllPvs\">全選</v-btn>\r\n        <v-btn small color=\"error\" style=\"margin-left: 5px\" @click=\"deselectAllPvs\">全部取消</v-btn>\r\n      </div>\r\n    </div>\r\n    <div style=\"overflow-y: auto\">\r\n      <div v-for=\"item in uniquePvNames\" :key=\"item.name\" style=\"flex-grow: 1; margin: 5px\">\r\n        <v-btn\r\n          block\r\n          rounded=\"0\"\r\n          :class=\"{ selected: isPvSelected(item.name), deselected: !isPvSelected(item.name) }\"\r\n          :style=\"\r\n            isPvSelected(item.name)\r\n              ? { background: item.color, color: 'white' }\r\n              : { background: 'white', color: item.color, border: `1px solid ${item.color}` }\r\n          \"\r\n          @click=\"selectPv(item.name)\"\r\n        >\r\n          {{ item.name }}\r\n        </v-btn>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Chart\r\n    v-if=\"Object.keys(chartData).length > 0\"\r\n    :chartData=\"chartData\"\r\n    :chartOptions=\"chartOptions\"\r\n    style=\"flex: 8; margin-top: 25px\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"@/components/chart/Chart.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Chart,\r\n  },\r\n  props: {\r\n    chartData: Object,\r\n  },\r\n  computed: {\r\n    uniquePvNames() {\r\n      const uniqueNames = new Map();\r\n      if (this.chartData.datasets) {\r\n        this.chartData.datasets.forEach((dataset) => {\r\n          const name = dataset.label.split(\" \")[0];\r\n          const color = dataset.borderColor;\r\n          if (!uniqueNames.has(name)) {\r\n            uniqueNames.set(name, color);\r\n          }\r\n        });\r\n      }\r\n      return Array.from(uniqueNames).map(([name, color]) => ({ name, color }));\r\n    },\r\n  },\r\n  methods: {\r\n    selectPv(pvName) {\r\n      this.chartData.datasets.forEach((dataset) => {\r\n        if (dataset.label.startsWith(pvName)) {\r\n          dataset.hidden = !dataset.hidden;\r\n        }\r\n      });\r\n    },\r\n    isPvSelected(pvName) {\r\n      const dataset = this.chartData.datasets.find((dataset) => dataset.label.startsWith(pvName));\r\n      return !dataset.hidden;\r\n    },\r\n    selectAllPvs() {\r\n      this.chartData.datasets.forEach((dataset) => {\r\n        dataset.hidden = false;\r\n      });\r\n    },\r\n    deselectAllPvs() {\r\n      this.chartData.datasets.forEach((dataset) => {\r\n        dataset.hidden = true;\r\n      });\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartOptions: {\r\n        bezierCurve: false,\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        // interaction: {\r\n        //   // Group Tooltip\r\n        // //   mode: \"nearest\",\r\n        //   axis: \"x\",\r\n        //   intersect: false,\r\n        // },\r\n        plugins: {\r\n          // Plugins\r\n          title: {\r\n            // 主標題\r\n            display: true,\r\n            text: \"\",\r\n            font: {\r\n              weight: \"bolder\",\r\n              size: 18,\r\n            },\r\n          },\r\n          subtitle: {\r\n            // 副標題\r\n            display: true,\r\n            text: \"\",\r\n            color: \"#ED4C67\",\r\n            font: {\r\n              weight: \"bolder\",\r\n              size: 16,\r\n            },\r\n          },\r\n          // Change options for ALL labels of THIS CHART(需要安裝 chartjs-plugin-datalabels)\r\n          datalabels: {\r\n            // 資料標籤\r\n            display: true,\r\n            color: \"#000\",\r\n            align: \"end\",\r\n            anchor: \"end\",\r\n            font: {\r\n              weight: \"bolder\",\r\n            },\r\n          },\r\n          tooltip: {\r\n            // // 提示框\r\n            // padding: 10,\r\n            // titleFont: {\r\n            //   size: 16,\r\n            //   weight: \"bolder\",\r\n            // },\r\n            // titleMarginBottom: 10, // title margin-bottom\r\n            // bodyFont: {\r\n            //   size: 14,\r\n            // },\r\n            // bodySpacing: 10, // body間距\r\n            // backgroundColor: \"rgba(247, 245, 248, 1)\",\r\n            // titleColor: \"black\",\r\n            // bodyColor: \"black\",\r\n            // borderColor: \"blue\",\r\n            // borderWidth: \"1\",\r\n            callbacks: {\r\n              label: function (context) {\r\n                let label = context.dataset.label || \"\";\r\n                if (label) {\r\n                  label += \": \";\r\n                }\r\n                if (context.parsed.y !== null) {\r\n                  label += context.parsed.y.toFixed(2) + \"%\";\r\n                }\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            ticks: {\r\n              callback: function (value) {\r\n                return value + \"%\";\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"@/assets/style/browseprogress.css\";\r\n</style>\r\n","<template>\r\n  <div class=\"line-chart-container\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  name: \"Chart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(newData) {\r\n        this.updateChart(newData);\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createChart();\r\n  },\r\n  beforeDestroy() {\r\n    this.destroyChart();\r\n  },\r\n  methods: {\r\n    createChart() {\r\n      const ctx = this.$refs.chartCanvas;\r\n      if (!Chart.getChart(ctx)) {\r\n        // 沒有圖表Instance再新增\r\n        this.chart = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: this.chartData,\r\n          options: this.chartOptions,\r\n        });\r\n      }\r\n    },\r\n    updateChart(newData) {\r\n      if (this.chart) {\r\n        this.chart.data = newData;\r\n        this.chart.update();\r\n      }\r\n    },\r\n    destroyChart() {\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n        this.chart = null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  width: 100% !important;\r\n  height: 100% !important;\r\n}\r\n\r\n.line-chart-container {\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 80vh;\r\n  overflow-x: auto;\r\n  overflow-y: auto;\r\n  margin-right: 25px;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { render } from \"./Chart.vue?vue&type=template&id=ebb57e68&scoped=true\"\nimport script from \"./Chart.vue?vue&type=script&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&lang=js\"\n\nimport \"./Chart.vue?vue&type=style&index=0&id=ebb57e68&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ebb57e68\"]])\n\nexport default __exports__","import { render } from \"./SiteSelectionChart.vue?vue&type=template&id=1a20d846&scoped=true\"\nimport script from \"./SiteSelectionChart.vue?vue&type=script&lang=js\"\nexport * from \"./SiteSelectionChart.vue?vue&type=script&lang=js\"\n\nimport \"./SiteSelectionChart.vue?vue&type=style&index=0&id=1a20d846&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1a20d846\"]])\n\nexport default __exports__"],"names":["class","style","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_v_icon","color","_hoisted_3","_hoisted_4","_component_v_btn","small","onClick","$options","selectAllPvs","deselectAllPvs","_hoisted_5","_createElementBlock","_Fragment","_renderList","uniquePvNames","item","key","name","block","rounded","_normalizeClass","selected","isPvSelected","deselected","_normalizeStyle","border","$event","selectPv","Object","keys","$props","chartData","length","_createBlock","_component_Chart","chartOptions","$data","ref","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","required","watch","deep","newData","updateChart","mounted","createChart","beforeDestroy","destroyChart","methods","$refs","chartCanvas","__exports__","components","computed","uniqueNames","pvName","find","bezierCurve","subtitle","datalabels","anchor","toFixed"],"sourceRoot":""}