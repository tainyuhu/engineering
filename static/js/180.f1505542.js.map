{"version":3,"file":"static/js/180.f1505542.js","mappings":"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","sources":["webpack://frontend/./src/api/apiService.js","webpack://frontend/./src/api/planService.js","webpack://frontend/./src/components/chart/Chart.vue","webpack://frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend/./node_modules/chart.js/dist/chart.js","webpack://frontend/./node_modules/chart.js/auto/auto.js","webpack://frontend/./src/components/chart/Chart.vue?eb38"],"sourcesContent":["import axios from 'axios';\r\n\r\n// 創建 Axios 實例\r\nconst apiClient = axios.create({\r\n\tbaseURL: '/',\r\n    // baseURL: process.env.VUE_APP_API_BASE_URL, // 設置所有 Axios 請求的基本 URL。\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// 請求攔截器\r\napiClient.interceptors.request.use(\r\n    config => {\r\n        // 檢查本地存取是否有 token\r\n        const token = localStorage.getItem('token');\r\n\r\n        // 如果有 token，則添加道請求頭部\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        // 返回配置\r\n        return config;\r\n    },\r\n    error => {\r\n        // 處理請求錯誤\r\n        console.error('Request error:', error);\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 響應攔截器\r\napiClient.interceptors.response.use(\r\n    response => {\r\n        // 處理響應數據\r\n        return response;\r\n    },\r\n    error => {\r\n        // 響應錯誤處理\r\n        if (error.response && error.response.status === 401) {\r\n            // 處理401未認證的錯誤，重訂定位到登入頁面\r\n            window.location.href = '/login';\r\n        }\r\n\r\n        // 顯示全局錯誤的消息\r\n        alert(`錯誤提醒: ${error.message},請截圖回報管理人員`);\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default apiClient;\r\n","import apiClient from './apiService';\r\n\r\nconst fetchMeeting = () => {\r\n    return apiClient.get('/api/v1/meetingrecord/');\r\n};\r\n\r\nconst fetchFile = () => {\r\n    return apiClient.get('/api/v1/fileprogress/');\r\n};\r\n\r\nconst fetchPlans = () => {\r\n    return apiClient.get('/api/v1/plans/');\r\n};\r\n\r\nconst fetchProjects = () => {\r\n    return apiClient.get('/api/v1/projects/');\r\n};\r\n\r\nconst fetchCasesByLoop = (loopid) => {\r\n    return apiClient.get(`/api/v1/project-cases/${loopid}/`);\r\n};\r\n\r\nconst fetchLoopsByProject = (projectid) => {\r\n    return apiClient.get(`/api/v1/project-loops-by-project/${projectid}/`);\r\n};\r\n\r\n\r\nexport { fetchPlans, fetchProjects, fetchCasesByLoop, fetchLoopsByProject, fetchFile, fetchMeeting };\r\n","<template>\r\n  <div class=\"line-chart-container\" style=\"min-width: 600px; min-height: 450px\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  name: \"Chart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(newData) {\r\n        this.updateChart(newData);\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createChart();\r\n  },\r\n  methods: {\r\n    createChart() {\r\n      const ctx = this.$refs.chartCanvas;\r\n      if (!Chart.getChart(ctx)) {\r\n        // 沒有圖表Instance再新增\r\n        this.chart = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: this.chartData,\r\n          options: this.chartOptions,\r\n        });\r\n      }\r\n    },\r\n    updateChart(newData) {\r\n      if (this.chart) {\r\n        this.chart.data = newData;\r\n        this.chart.update();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.line-chart-container {\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 70vh;\r\n  overflow-x: auto;\r\n  overflow-y: auto;\r\n  margin-right: 25px;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { render } from \"./Chart.vue?vue&type=template&id=353ef1f2&scoped=true\"\nimport script from \"./Chart.vue?vue&type=script&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&lang=js\"\n\nimport \"./Chart.vue?vue&type=style&index=0&id=353ef1f2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-353ef1f2\"]])\n\nexport default __exports__"],"names":["apiClient","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","status","window","location","href","alert","message","fetchMeeting","get","fetchFile","fetchPlans","fetchProjects","fetchLoopsByProject","projectid","class","style","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","chartData","required","watch","deep","newData","updateChart","mounted","createChart","methods","$refs","chartCanvas","__exports__"],"sourceRoot":""}