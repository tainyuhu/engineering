{"version":3,"file":"static/js/219.50548192.js","mappings":"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","sources":["webpack://frontend/./src/components/chart/SeasonProjectChart.vue","webpack://frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend/./node_modules/chart.js/dist/chart.js","webpack://frontend/./node_modules/chart.js/auto/auto.js","webpack://frontend/./src/components/chart/SeasonProjectChart.vue?ee01","webpack://frontend/./src/components/table/SeasonWeekProgressTable.vue","webpack://frontend/./src/components/table/SeasonWeekProgressTable.vue?e5b4","webpack://frontend/./src/components/table/WeekProgressTable.vue","webpack://frontend/./src/components/table/WeekProgressTable.vue?d384","webpack://frontend/./src/components/table/SeasonProgressTable.vue","webpack://frontend/./src/components/table/SeasonProgressTable.vue?ea8d","webpack://frontend/./src/components/loading/Loader.vue","webpack://frontend/./src/components/loading/Loader.vue?008b","webpack://frontend/./src/api/apiService.js","webpack://frontend/./src/api/planService.js","webpack://frontend/./src/api/pvProjectService.js","webpack://frontend/./src/views/Browse_Project_Progress.vue","webpack://frontend/./src/views/Browse_Project_Progress.vue?d0a7"],"sourcesContent":["<template>\r\n  <div class=\"line-chart-container\" style=\"min-width: 600px; min-height: 450px;\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  name: 'SeasonProjectChart',\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(newData) {\r\n        this.updateChart(newData);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.createChart();\r\n  },\r\n  methods: {\r\n    createChart() {\r\n      const ctx = this.$refs.chartCanvas;\r\n      if (!Chart.getChart(ctx)) { // 沒有圖表Instance再新增\r\n        this.chart = new Chart(ctx, {\r\n          type: 'line',\r\n          data: this.chartData,\r\n          options: this.chartOptions\r\n        });\r\n      }\r\n    },\r\n    updateChart(newData) {\r\n      if (this.chart) {\r\n        this.chart.data = newData;\r\n        this.chart.update();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.line-chart-container {\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 70vh;\r\n  overflow-x: auto;\r\n  overflow-y: auto;\r\n  margin-right: 25px;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { render } from \"./SeasonProjectChart.vue?vue&type=template&id=3881ed26&scoped=true\"\nimport script from \"./SeasonProjectChart.vue?vue&type=script&lang=js\"\nexport * from \"./SeasonProjectChart.vue?vue&type=script&lang=js\"\n\nimport \"./SeasonProjectChart.vue?vue&type=style&index=0&id=3881ed26&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3881ed26\"]])\n\nexport default __exports__","<!--  SeasonWeekProgressTable 综合表格 -->\r\n<template>\r\n   <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"th_title\">案場 / 季度-週間 </th>\r\n        <th class=\"th_title\" v-for=\"header in headers\" :key=\"header\" colspan=\"2\">\r\n          {{ header }}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(row, index) in rows\" :key=\"index\">\r\n        <td>{{ row.project_name }}</td>\r\n        <td v-for=\"data in row.data\" :key=\"data.key\" :colspan=\"data.type === 'summary' ? 2 : null\" :class=\"{ 'td_expected': data.type === 'expected' }\">\r\n          {{ data.value }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n</template>\r\n\r\n<!-- 另一種寫法 -->\r\n<!-- <script setup>\r\nconst props = defineProps({\r\n  headers: Array,\r\n  rows: Array,\r\n})\r\n</script> -->\r\n\r\n<script>\r\nexport default {\r\n  props:{\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    rows: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n  },\r\n\r\n  mounted(){\r\n    console.log(this.headers);\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n@import '@/assets/style/progressTable.css';\r\n\r\n</style>\r\n","import { render } from \"./SeasonWeekProgressTable.vue?vue&type=template&id=646097d0&scoped=true\"\nimport script from \"./SeasonWeekProgressTable.vue?vue&type=script&lang=js\"\nexport * from \"./SeasonWeekProgressTable.vue?vue&type=script&lang=js\"\n\nimport \"./SeasonWeekProgressTable.vue?vue&type=style&index=0&id=646097d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-646097d0\"]])\n\nexport default __exports__","<!-- WeekProgressTable 週間表格 -->\r\n<template>\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"th_title\">案場 / 週間</th>\r\n        <th class=\"th_title\" v-for=\"header in tableData.headers\" :key=\"header\" colspan=\"2\">\r\n          {{ header }}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody v-if=\"!isBankMode\">\r\n      <tr v-for=\"row in tableData.rows\" :key=\"row.project_name\">\r\n        <td>{{ row.project_name }}</td>\r\n        <td v-for=\"item in row.data\" :key=\"item.key\" :colspan=\"item.type === 'summary' ? 2 : null\" :class=\"{ 'td_expected': item.type === 'expected'}\">\r\n          {{ item.value }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    <tbody v-if=\"isBankMode\">\r\n      <tr v-for=\"row in tableBankData.rows\" :key=\"row.project_name\">\r\n        <td>{{ row.project_name }}</td>\r\n        <td v-for=\"item in row.data\" :key=\"item.key\" :colspan=\"item.type === 'summary' ? 2 : null\" :class=\"{ 'td_expected': item.type === 'expected' }\">\r\n          {{ item.value }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    tableData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    tableBankData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isBankMode: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n@import '@/assets/style/progressTable.css';\r\n\r\n</style>","import { render } from \"./WeekProgressTable.vue?vue&type=template&id=446ea27c&scoped=true\"\nimport script from \"./WeekProgressTable.vue?vue&type=script&lang=js\"\nexport * from \"./WeekProgressTable.vue?vue&type=script&lang=js\"\n\nimport \"./WeekProgressTable.vue?vue&type=style&index=0&id=446ea27c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-446ea27c\"]])\n\nexport default __exports__","<!--  SeasonWeekProgressTable 综合表格 -->\r\n<template>\r\n    <table class=\"table\" >\r\n        <thead>\r\n            <tr>\r\n            <th class=\"th_title\">案場 / 季度</th>\r\n            <th class=\"th_title\" v-for=\"header in seasonTableData.headers\" :key=\"header\" colspan=\"2\">\r\n                {{ header }}\r\n            </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(row, index) in seasonTableData.rows\" :key=\"index\">\r\n            <td>{{ row.project_name }}</td>\r\n            <td v-for=\"data in row.data\" :key=\"data.key\" :colspan=\"data.type === 'summary' ? 2 : null\" :class=\"{ 'td_expected': data.type === 'expected' }\">\r\n                {{ data.value }}\r\n            </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n \r\n <script>\r\n export default {\r\n    props: {\r\n    seasonTableData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n   }\r\n }\r\n </script>\r\n \r\n \r\n <style scoped>\r\n @import '@/assets/style/progressTable.css';\r\n \r\n </style>","import { render } from \"./SeasonProgressTable.vue?vue&type=template&id=5140bb8c&scoped=true\"\nimport script from \"./SeasonProgressTable.vue?vue&type=script&lang=js\"\nexport * from \"./SeasonProgressTable.vue?vue&type=script&lang=js\"\n\nimport \"./SeasonProgressTable.vue?vue&type=style&index=0&id=5140bb8c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5140bb8c\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"overlay\" v-if=\"isLoading\">\r\n      <v-progress-circular indeterminate color=\"#FF6F00\"></v-progress-circular>\r\n      <div> 已加载 {{ elapsedSeconds }} 秒</div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      isLoading: {\r\n        type: Boolean,\r\n        required: true\r\n      },\r\n      elapsedSeconds: {\r\n        type: Number,\r\n        required: true\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./Loader.vue?vue&type=template&id=502f7388&scoped=true\"\nimport script from \"./Loader.vue?vue&type=script&lang=js\"\nexport * from \"./Loader.vue?vue&type=script&lang=js\"\n\nimport \"./Loader.vue?vue&type=style&index=0&id=502f7388&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-502f7388\"]])\n\nexport default __exports__","import axios from 'axios';\r\n\r\n// 創建 Axios 實例\r\nconst apiClient = axios.create({\r\n    baseURL: process.env.VUE_APP_API_BASE_URL, // 設置所有 Axios 請求的基本 URL。\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// 請求攔截器\r\napiClient.interceptors.request.use(\r\n    config => {\r\n        // 檢查本地存取是否有 token\r\n        const token = localStorage.getItem('token');\r\n\r\n        // 如果有 token，則添加道請求頭部\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        // 返回配置\r\n        return config;\r\n    },\r\n    error => {\r\n        // 處理請求錯誤\r\n        console.error('Request error:', error);\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 響應攔截器\r\napiClient.interceptors.response.use(\r\n    response => {\r\n        // 處理響應數據\r\n        return response;\r\n    },\r\n    error => {\r\n        // 響應錯誤處理\r\n        if (error.response && error.response.status === 401) {\r\n            // 處理401未認證的錯誤，重訂定位到登入頁面\r\n            window.location.href = '/login';\r\n        }\r\n\r\n        // 顯示全局錯誤的消息\r\n        alert(`錯誤提醒: ${error.message},請截圖回報管理人員`);\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default apiClient;\r\n","import apiClient from './apiService';\r\n\r\nconst fetchPlans = () => {\r\n    return apiClient.get('/api/plans/');\r\n};\r\n\r\nconst fetchProjects = () => {\r\n    return apiClient.get('/api/projects/');\r\n};\r\n\r\nconst fetchCases = () => {\r\n    return apiClient.get('/api/project-cases/');\r\n};\r\n\r\nconst fetchLoops = () => {\r\n    return apiClient.get('/api/project-loop/');\r\n};\r\n\r\nconst fetchLoopByPlan = (planid) => {\r\n    return apiClient.get(`/api/project-loop-by-plan/${planid}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nexport { fetchPlans, fetchProjects, fetchCases, fetchLoopByPlan, fetchLoops };\r\n","import apiClient from './apiService';\r\n\r\nconst fetchPVProjects = () => {\r\n    return apiClient.get('/api/pv-project/');\r\n};\r\n\r\nconst fetchPVExpectedProgress = () => {\r\n    return apiClient.get('/api/pv-expected-progress/');\r\n};\r\n\r\nconst fetchPVExpected = () => {\r\n    return apiClient.get('/api/pv-expected/');\r\n};\r\n\r\nconst fetchPVProgress = () => {\r\n    return apiClient.get('/api/pv-progress/');\r\n};\r\n\r\nconst fetchPVBank = () => {\r\n    return apiClient.get('/api/pv-bank/');\r\n};\r\n\r\nconst fetchPvWeeklyProgressSummary = () => {\r\n    return apiClient.get('/api/fetchPvWeeklyProgressSummary/');\r\n};\r\n\r\nconst fetchSeasonWeekTableData = (loopId) => {\r\n    return apiClient.get(`/api/season-week-table-data/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nconst fetchWeekTableData = (loopId) => {\r\n    return apiClient.get(`/api/week-table-data/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nconst fetchWeekBankTableData = (loopId) => {\r\n    return apiClient.get(`/api/week-bank-table-data/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nconst fetchSeasonTableData = (loopId) => {\r\n    return apiClient.get(`/api/season-table-data/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nconst fetchSeasonProjectChartData = (loopId) => {\r\n    return apiClient.get(`/api/season-project-chart-data/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nconst fetchPVProjectByLoopList = (loopId) => {\r\n    return apiClient.get(`/api/pvprojects-by-loop/${loopId}/`, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\nexport { fetchPVProjects, fetchPVExpectedProgress, fetchPVExpected, fetchPVProgress, fetchPVBank, fetchSeasonWeekTableData, fetchWeekTableData, fetchWeekBankTableData, fetchSeasonTableData, fetchPvWeeklyProgressSummary, fetchSeasonProjectChartData, fetchPVProjectByLoopList };\r\n","<template>\r\n  <div class=\"background-card\">\r\n    <!-- 標題 -->\r\n    <v-col cols=\"12\" class=\"title\">\r\n      <div class=\"blue-rectangle\"></div>\r\n      <span class=\"span_title\">PV工程進度總覽</span>\r\n    </v-col>\r\n\r\n    <!-- 計畫選擇 -->\r\n    <v-col cols=\"12\" class=\"flex-container\">\r\n      <div class=\"orange-rectangle\"></div>\r\n      <span class=\"span_label\">計畫名稱：</span>\r\n      <v-select :items=\"plans\" item-title=\"plan_name\" item-value=\"id\" v-model=\"selectedPlan\" variant=\"underlined\"></v-select>\r\n    </v-col>\r\n\r\n    <!-- 迴路選擇 -->\r\n    <!-- 網頁全按鈕顯示 -->\r\n    <div class=\"tabs-container\"  v-if=\"!is_mobile\">\r\n      <v-col cols=\"9\" class=\"loop_tabs\" v-for=\"loop in loopsOfSelectedPlan\" :key=\"loop.id\">\r\n        <v-btn block variant=\"text\" @click=\"selectLoop(loop)\">\r\n          <span class=\"span\">{{ loop.loop_name }}</span>\r\n        </v-btn>\r\n      </v-col>\r\n      <v-col cols=\"3\" class=\"status-container\">\r\n        <div v-if=\"selectedLoop\" class=\"span_loop_label\">狀態：</div>\r\n        <v-btn v-if=\"selectedLoop\" variant=\"text\" :class=\"currentView === 'table' ? 'table-btn' : 'report-btn'\" @click=\"toggleView\">{{ currentView === 'table' ? '表格' : '報表' }}</v-btn>\r\n      </v-col>\r\n    </div>\r\n    <!-- 手機下拉選單 -->\r\n    <div class=\"tabs-container\"  v-else>\r\n      <v-col cols=\"8\">\r\n        <v-select label=\"選擇迴路\" :items=\"loopsOfSelectedPlan\" item-title=\"loop_name\" item-value=\"id\" v-model=\"selectedLoopId\"  variant=\"underlined\"></v-select>\r\n      </v-col>\r\n      <v-col cols=\"4\" class=\"status-container\" >\r\n        <div v-if=\"selectedLoop && !is_mobile\" class=\"span_loop_label\">狀態：</div>\r\n        <v-btn v-if=\"selectedLoop\" variant=\"text\" :class=\"currentView === 'table' ? 'table-btn' : 'report-btn'\" @click=\"toggleView\">{{ currentView === 'table' ? '表格' : '報表' }}</v-btn>\r\n      </v-col>\r\n    </div>\r\n\r\n    <!-- 顯示所選擇迴路與其功能鍵 -->\r\n    <div v-if=\"selectedLoop\" class=\"loop-selection-container\">\r\n      <v-col cols=\"12\" md=\"4\" class=\"span_loop_label\">目前瀏覽迴路：{{ selectedLoop.loop_name }}</v-col>\r\n      <v-col cols=\"12\" md=\"4\" class=\"py-2 d-flex justify-center\" v-if=\"activeTab === 'details' && currentView === 'table'\">\r\n        <v-btn-toggle v-model=\"currentSelection\" group color=\"primary\" variant=\"outlined\">\r\n          <v-btn value=\"season\" @click=\"setCurrentSelection('season')\"> 季 </v-btn>\r\n          <v-btn value=\"week\" @click=\"setCurrentSelection('week')\"> 週 </v-btn>\r\n        </v-btn-toggle>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\" md=\"4\" class=\"py-2 d-flex justify-center\" v-if=\"currentView === 'report'\">\r\n        <v-btn-toggle v-model=\"currentChartSelection\" group color=\"primary\" variant=\"outlined\">\r\n          <v-btn value=\"loops\" @click=\"setCurrentChartSelection('loops')\"> 迴路 </v-btn>\r\n          <v-btn value=\"cases\" @click=\"setCurrentChartSelection('cases')\"> 案場 </v-btn>\r\n        </v-btn-toggle>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\" md=\"4\" class=\"status-container\" v-if=\"selectedLoop\">\r\n        <div class=\"tabs\" v-if=\"currentSelection === 'week' && activeTab === 'details' && currentView === 'table'\">\r\n          <v-btn v-if=\"isBankMode\" color=\"#FF6F00\" @click=\"toggleMode\">銀行模式</v-btn>\r\n          <v-btn v-else color=\"#0984e3\" @click=\"toggleMode\">工程模式</v-btn>\r\n        </div>\r\n        <div class=\"tabs\" v-if=\"currentView === 'table'\">\r\n          <v-btn :class=\"{ 'active': activeTab === 'overview' }\" @click=\"toggleTab('overview')\">\r\n            <span class=\"span\">總覽</span>\r\n          </v-btn>\r\n        </div>\r\n        <div class=\"tabs\" v-if=\"currentView === 'table'\">\r\n          <v-btn :class=\"{ 'active': activeTab === 'details' }\" @click=\"toggleTab('details')\">\r\n            <span class=\"span\">詳情</span>\r\n          </v-btn>\r\n        </div> \r\n      </v-col>\r\n    </div>\r\n\r\n    <!-- 引用 SeasonWeekProgressTable 組件 -->\r\n    <div class=\"table-container\" v-if=\"activeTab === 'overview'&& currentView === 'table'&& selectedLoop\">\r\n      <!-- 加載器 -->\r\n      <loader :isLoading=\"isLoading\" :elapsedSeconds=\"elapsedSeconds\"></loader>\r\n      <v-skeleton-loader v-if=\"isLoading\" type=\"table\"></v-skeleton-loader>\r\n      <div v-else>\r\n        <season-week-progress-table :headers=\"seasonWeekData.headers\" :rows=\"seasonWeekData.rows\"></season-week-progress-table>\r\n      </div>\r\n    </div> \r\n    \r\n    <div class=\"table-container\" v-if=\"activeTab === 'details' && currentView === 'table'\">\r\n      <!-- 引用 WeekProgressTable 組件 -->\r\n      <div v-if=\"selectedLoop && currentSelection === 'week'\">\r\n        <!-- 加載器 -->\r\n        <loader :isLoading=\"isLoading\" :elapsedSeconds=\"elapsedSeconds\"></loader>\r\n        <v-skeleton-loader v-if=\"isLoading\" type=\"table\"></v-skeleton-loader>\r\n        <div v-else>\r\n          <week-progress-table :tableData=\"this.tableData\" :tableBankData=\"tableBankData\" :isBankMode=\"isBankMode\"></week-progress-table>\r\n        </div>\r\n      </div>\r\n      <!-- 引用 SeasonProgressTable 組件 -->\r\n      <div v-else-if=\"selectedLoop && currentSelection === 'season'\">\r\n        <!-- 加載器 -->\r\n        <loader :isLoading=\"isLoading\" :elapsedSeconds=\"elapsedSeconds\"></loader>\r\n        <v-skeleton-loader v-if=\"isLoading\" type=\"table\"></v-skeleton-loader>\r\n        <div v-else>\r\n          <season-progress-table :seasonTableData=\"seasonTableData\"></season-progress-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-show=\"currentView === 'report' && selectedLoop && chartData && currentChartSelection==='cases'\">\r\n      <V-row>\r\n        <v-col cols=\"2\">\r\n          <div class=\"green-rectangle\"></div>\r\n          <span class=\"span_project_label\">案場選擇：</span>\r\n          <div class=\"d-flex flex-wrap justify-content-center project-btn-container\">\r\n            <div v-for=\"item in pVProjectByLoopsList\" :key=\"item.project_name\">\r\n              <v-btn variant=\"outlined\" class=\" project-btn\" :class=\"{ 'selected': isSelected(item.project_name) }\" :style=\"getButtonStyle(item.project_name)\" @click=\"toggleProjectSelection(item.project_name)\">\r\n                {{ item.project_name }}\r\n              </v-btn>\r\n            </div>\r\n          </div> \r\n        </v-col>\r\n        <v-col cols=\"10\">\r\n          <!-- 引用 SeasonProjectChart 組件 -->\r\n          <season-project-chart v-if=\"chartData\" :chart-data=\"chartData\" :chart-options=\"chartOptions\"/>\r\n        </v-col>\r\n      </V-row> \r\n    </div>\r\n\r\n    <div v-show=\"currentView === 'report' && selectedLoop && chartData && currentChartSelection==='loops'\">\r\n      <V-row>\r\n        <v-col cols=\"2\">\r\n          <div class=\"green-rectangle\"></div>\r\n          <span class=\"span_project_label\">迴路進度：</span>\r\n        </v-col>\r\n        <v-col cols=\"10\">\r\n          <!-- 引用 SeasonProjectChart 組件 -->\r\n          <season-project-chart v-if=\"chartData\" :chart-data=\"chartData\" :chart-options=\"chartOptions\"/>\r\n        </v-col>\r\n      </V-row> \r\n    </div>\r\n    \r\n    <div class=\"spacing\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\n  import SeasonProjectChart from '../components/chart/SeasonProjectChart.vue'\r\n  import SeasonWeekProgressTable from '../components/table/SeasonWeekProgressTable.vue';\r\n  import WeekProgressTable from '@/components/table/WeekProgressTable.vue';\r\n  import SeasonProgressTable from '../components/table/SeasonProgressTable.vue';\r\n  import Loader from '../components/loading/Loader.vue';\r\n</script>\r\n\r\n<script>\r\nimport { fetchPlans, fetchLoopByPlan, fetchLoops } from '@/api/planService';\r\nimport { fetchSeasonWeekTableData, fetchWeekTableData, fetchWeekBankTableData, fetchSeasonTableData, fetchSeasonProjectChartData, fetchPVProjectByLoopList} from '@/api/pvProjectService';\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      plans: [], // 所有計畫\r\n      loops: [], // 所有迴路\r\n      loopsOfSelectedPlan:[],\r\n      selectedPlan: null, // 目前選定的計畫\r\n      selectedLoop: null, //目前選中的迴路\r\n      selectedLoopId: null, // 選中的迴路 ID\r\n      activeTab: 'overview', // 預設選擇 \"總覽\"\r\n      currentSelection: 'week', // 預設選擇 '週'\r\n      currentChartSelection: 'loops', // 預設選擇 '週'\r\n      isBankMode: true, // 預設選擇為\"銀行\"\r\n      currentView: 'table',\r\n      tableData: { headers: [], rows: [] }, // 初始化 tableData\r\n      tableBankData: { headers: [], rows: [] }, // 初始化 tableData\r\n      seasonWeekData: { headers: [], rows: [] }, // 初始化 seasonWeekData\r\n      seasonTableData: { headers: [], rows: [] }, // 季表格\r\n      pVProjectByLoopsList:[],\r\n      isLoading: false, // 加載器\r\n      elapsedSeconds: 0,\r\n      timer: null,\r\n      apiError: null,\r\n      seasonProjectChartData: null,\r\n      chartData: { labels: [], datasets: [] },\r\n      originalChartData: null,\r\n      assignedHues: new Set(),\r\n      stringColorMap: {}, // 儲存字符串對應顏色的對象\r\n      selectedProjects:[],\r\n    };\r\n  },\r\n  methods: {\r\n    isSelected(projectName) {\r\n      return this.selectedProjects.includes(projectName);\r\n    },\r\n    getButtonStyle(projectName) {\r\n      const color = this.hashStringToColor(projectName);\r\n      if (this.isSelected(projectName)) {\r\n        return {\r\n          backgroundColor: color,\r\n          color: 'white'\r\n        };\r\n      } else {\r\n        return {\r\n          borderColor: color,\r\n          borderWidth: '2px',\r\n        };\r\n      }\r\n    },\r\n    toggleProjectSelection(projectName) {\r\n      const index = this.selectedProjects.indexOf(projectName);\r\n      if (index > -1) {\r\n        this.selectedProjects.splice(index, 1);\r\n      } else {\r\n        this.selectedProjects.push(projectName);\r\n      }\r\n    },\r\n    async loadDataBasedOnTab() {\r\n      this.startLoading();\r\n      await this.fetchDataForLoop(this.selectedLoop.id);\r\n      this.stopLoading();\r\n    },\r\n    // 統一處理 API 錯誤的方法\r\n    handleApiError(error) {\r\n      console.error('API Error:', error);\r\n    },\r\n    resetTableData() {\r\n      this.tableData = { headers: [], rows: [] };\r\n      this.tableBankData = { headers: [], rows: [] };\r\n      this.seasonTableData = { headers: [], rows: [] };\r\n      this.seasonWeekData = { headers: [], rows: [] };\r\n    },\r\n    startLoading() {\r\n      this.isLoading = true;\r\n      this.elapsedSeconds = 0;\r\n      this.timer = setInterval(() => {\r\n        this.elapsedSeconds++;\r\n      }, 1000);\r\n    },\r\n    stopLoading() {\r\n      this.isLoading = false;\r\n      clearInterval(this.timer);\r\n    },\r\n    async fetchData() {\r\n      try {\r\n        const plansResponse = await fetchPlans();\r\n        this.plans = plansResponse.data;\r\n\r\n        const loopsResponse = await fetchLoops();\r\n        this.loops = loopsResponse.data;\r\n      } catch (error) {\r\n          this.handleApiError(error);\r\n      }\r\n    },\r\n    async fetchSeasonWeekTableData(loopId) {\r\n        try {\r\n            const response = await fetchSeasonWeekTableData(loopId);\r\n            this.seasonWeekData = response.data;\r\n        } catch (error) {\r\n            this.handleApiError(error);\r\n        }\r\n    },\r\n    async fetchWeekTableData(loopId) {\r\n        try {\r\n            const response = await fetchWeekTableData(loopId);\r\n            this.tableData = response.data;\r\n        } catch (error) {\r\n            this.handleApiError(error);\r\n        }\r\n    },\r\n    async fetchWeekBankTableData(loopId) {\r\n        try {\r\n            const response = await fetchWeekBankTableData(loopId);\r\n            this.tableBankData = response.data;\r\n        } catch (error) {\r\n            this.handleApiError(error);\r\n        }\r\n    },\r\n    async fetchSeasonTableData(loopId) {\r\n        try {\r\n            const response = await fetchSeasonTableData(loopId);\r\n            this.seasonTableData = response.data;\r\n        } catch (error) {\r\n          this.handleApiError(error);\r\n        }\r\n    },\r\n    async fetchSeasonProjectsChartData(loopId) {\r\n      try {\r\n        const response = await fetchSeasonProjectChartData(loopId);\r\n        if (response && response.data && Array.isArray(response.data.datasets)) {\r\n          this.originalChartData = JSON.parse(JSON.stringify(response.data)); // 存取原始資料，以因應資料比對\r\n          this.chartData = this.processChartData(response.data);\r\n          console.log('chartData', this.chartData);\r\n        } else {\r\n          console.error('Invalid data structure received from API:', response);\r\n          this.chartData = { labels: [], datasets: [] }; \r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching project chart data:', error);\r\n        this.chartData = { labels: [], datasets: [] }; \r\n        this.handleApiError(error);\r\n      }\r\n    },\r\n    async fetchPVProjectByLoopsList(loopId) {\r\n      try {\r\n        const response = await fetchPVProjectByLoopList(loopId);\r\n        this.pVProjectByLoopsList = response.data;\r\n\r\n        this.selectedProjects = this.pVProjectByLoopsList.map(item => item.project_name);\r\n      } catch (error) {\r\n        this.handleApiError(error);\r\n      }\r\n    },\r\n    async fetchDataForLoop(loopId) {\r\n      if (this.activeTab === 'overview') {\r\n        await this.fetchSeasonWeekTableData(loopId);\r\n      } else if (this.activeTab === 'details') {\r\n        if (this.currentSelection === 'week') {\r\n          await this.fetchWeekTableData(loopId);\r\n          await this.fetchWeekBankTableData(loopId);\r\n        } else if (this.currentSelection === 'season') {\r\n          await this.fetchSeasonTableData(loopId);\r\n        }\r\n      }\r\n    },\r\n    selectLoop(loop) {\r\n      this.selectedLoop = loop;\r\n    },\r\n    toggleTab(tabName) {\r\n      this.activeTab = tabName;\r\n    },\r\n    toggleMode() {\r\n      this.isBankMode = !this.isBankMode;\r\n    },\r\n    toggleView() {\r\n      this.currentView = this.currentView === 'table' ? 'report' : 'table';\r\n    },\r\n    setCurrentView(view) {\r\n      this.currentView = view;\r\n    },\r\n    setCurrentSelection(value) {\r\n      this.currentSelection = value;\r\n    },\r\n    setCurrentChartSelection(value) {\r\n      this.currentChartSelection = value;\r\n    },\r\n    hashStringToColor(str) {\r\n        if (this.stringColorMap[str]) {\r\n        return this.stringColorMap[str];\r\n      }\r\n      let hash = 0;\r\n      for (let i = 0; i < str.length; i++) {\r\n        hash = str.charCodeAt(i) + ((hash << 7) - hash);\r\n      }\r\n      hash = Math.abs(hash);\r\n\r\n      let hue = hash % 360;\r\n      let saturation = 45 + (hash % 50); // 飽和度在50%至100%之間\r\n      let lightness = 25 + (hash % 50); // 亮度在25%至75%之間\r\n\r\n      // 確保顏色的獨特性\r\n      while (this.assignedHues.has(hue)) {\r\n        hue = (hue + 1) % 360;\r\n        saturation = (saturation + 1) % 50 + 50;\r\n        lightness = (lightness + 1) % 50 + 25;\r\n      }\r\n      this.assignedHues.add(hue);\r\n\r\n      const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n      this.stringColorMap[str] = color;\r\n      return color;\r\n    },\r\n    assignColorsToProjects(projectNames) {\r\n      const colorMap = {};\r\n      projectNames.forEach(name => {\r\n        colorMap[name] = this.hashStringToColor(name);\r\n      });\r\n      return colorMap;\r\n    },\r\n    processChartData(rawData) {\r\n      const uniqueProjects = new Set(rawData.datasets.map(d => d.label.split(' ')[0]));\r\n      const colorMap = this.assignColorsToProjects(uniqueProjects);\r\n\r\n      const processedData = {\r\n        labels: rawData.labels,\r\n        datasets: rawData.datasets.map(dataset => {\r\n          const projectName = dataset.label.split(' ')[0];\r\n          return {\r\n            ...dataset,\r\n            borderColor: colorMap[projectName],\r\n            backgroundColor: colorMap[projectName],\r\n            borderWidth: 2,\r\n            lineTension: 0.4,\r\n            fill: false,\r\n            borderDash: dataset.label.includes('預計') ? [5, 5] : []\r\n          };\r\n        })\r\n      }\r\n      console.log('Processed Data in Method:', processedData);\r\n      return processedData;\r\n    },\r\n  },\r\n  computed: {\r\n    is_mobile() {\r\n      return this.$vuetify.display.xs\r\n    },\r\n    chartOptions() {\r\n      return {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            max: 1,\r\n            min: 0,\r\n            beginAtZero: true,\r\n            ticks: {\r\n              stepSize: 0.1,\r\n              callback: function(value) {\r\n                return (value * 100).toFixed(0) + '%';\r\n              }\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Progress (%)'\r\n            },\r\n            \r\n          }\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          tooltip: {\r\n            mode: 'nearest',\r\n            intersect: true,\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) {\r\n                  label += ': ';\r\n                }\r\n                label += `${(context.parsed.y * 100).toFixed(2)}%`;\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n          },\r\n          \r\n        }\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    selectedLoopId: function(newVal, oldVal) {\r\n      if (newVal !== oldVal) {\r\n        this.selectedLoop = this.loops.find(loop => loop.id === newVal) || null;\r\n      }\r\n    },\r\n    selectedLoop: function(newVal) {\r\n      if (newVal) {\r\n        if (newVal !== null) {\r\n          this.selectedProjects = [];\r\n          this.selectedProjects = this.pVProjectByLoopsList.map(item => item.project_name);\r\n        } else {\r\n          this.selectedProjects = [];\r\n        }\r\n        this.startLoading();\r\n        this.fetchDataForLoop(newVal.id)\r\n        this.fetchSeasonProjectsChartData(newVal.id)\r\n        this.fetchPVProjectByLoopsList(newVal.id)\r\n        this.stopLoading();\r\n      }\r\n    },\r\n    selectedProjects: {\r\n      deep: true,\r\n      handler(newVal) {\r\n        if (this.chartData && this.originalChartData && Array.isArray(this.originalChartData.datasets)) {\r\n          const filteredData = {\r\n            ...this.originalChartData,\r\n            datasets: this.originalChartData.datasets.filter(dataset => {\r\n              return newVal.some(projectName => dataset.label.includes(projectName));\r\n            })\r\n          };\r\n          this.chartData = this.processChartData(filteredData); // 重新處理數據集來更新線條顏色\r\n        }\r\n      }\r\n    },\r\n    // 獲取該計畫所有迴路\r\n    async selectedPlan(newValue) {\r\n      if (newValue) {\r\n        try {\r\n          const response = await fetchLoopByPlan(newValue);\r\n          this.loopsOfSelectedPlan = response.data;\r\n          // 默認選擇第一迴路（如果有的话）\r\n          if (this.loopsOfSelectedPlan.length > 0) {\r\n            this.selectLoop(this.loopsOfSelectedPlan[0]);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching loops for the plan:', error);\r\n        }\r\n      } else {\r\n        this.loopsOfSelectedPlan = [];\r\n        this.selectedLoop = null;\r\n        this.selectedLoopId = null;\r\n      }\r\n    },\r\n    activeTab:{\r\n      immediate: true, // 進入頁面就讀\r\n      handler(newVal, oldVal) {\r\n        if (newVal !== oldVal && this.selectedLoop) {\r\n          this.loadDataBasedOnTab();\r\n        }\r\n      },\r\n    },\r\n    // 當 currentSelection 改變時，重新加載數據\r\n    currentSelection(newVal, oldVal) {\r\n      if (newVal !== oldVal && this.selectedLoop) {\r\n        this.loadDataBasedOnTab();\r\n      }\r\n    },\r\n    selectedDatasetsLabel(newVal, oldVal) {\r\n      if (newVal !== oldVal) {\r\n        this.filterChartData();\r\n      }\r\n    },\r\n  },\r\n  async mounted() {\r\n    this.fetchData();\r\n    // 設置默認迴路（如果有的话）\r\n    this.$nextTick(() => {\r\n      if (this.loopsOfSelectedPlan.length > 0) {\r\n        this.selectLoop(this.loopsOfSelectedPlan[0]);\r\n      }\r\n    });\r\n\r\n    this.$nextTick(() => {\r\n      if (this.selectedLoop) {\r\n        this.selectedProjects = this.pVProjectByLoopsList.map(item => item.project_name);\r\n        this.fetchSeasonWeekTableData(this.selectedLoop.id);\r\n        this.fetchWeekTableData(this.selectedLoop.id);\r\n        this.fetchWeekBankTableData(this.selectedLoop.id);\r\n        this.fetchSeasonTableData(this.selectedLoop.id);\r\n        this.fetchSeasonProjectsChartData(this.selectedLoop.id);\r\n      }\r\n    });\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.span{\r\n  font-size: 10pt;\r\n}\r\n.title {\r\n  margin: 15px;\r\n}\r\n.blue-rectangle {\r\n  background-color: #0984e3;\r\n  width: 10px;\r\n  height: 30px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin-right: 10px;\r\n}\r\n\r\n.span_title {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 0;\r\n  font-size: 16pt;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.flex-container {\r\n    margin: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.orange-rectangle {\r\n  background-color: #FF6F00;\r\n  width: 10px;            \r\n  height: 20px;           \r\n  display: inline-block;  \r\n  vertical-align: middle; \r\n  margin-right: 10px;\r\n}\r\n.green-rectangle {\r\n  background-color: #00b894;\r\n  width: 10px;            \r\n  height: 20px;           \r\n  display: inline-block;  \r\n  vertical-align: middle; \r\n  margin-right: 10px;\r\n  margin-left: 50px;\r\n  margin-bottom: 10px;\r\n}\r\n.span_label{\r\n    display: inline-block; \r\n    vertical-align: middle;\r\n    font-size: 16pt; \r\n    font-weight: bold; \r\n    margin:10px;\r\n}\r\n\r\n.span_loop_label{\r\n    display: inline-block; \r\n    vertical-align: middle;\r\n    font-size: 12pt; \r\n    font-weight: bold; \r\n    color: #272828;\r\n    margin:10px;\r\n}\r\n\r\n.span_project_label{\r\n    display: inline-block; \r\n    vertical-align: middle;\r\n    font-size: 12pt; \r\n    font-weight: bold; \r\n    color: #272828;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.tabs-container {\r\n  display: flex;\r\n  flex-wrap: nowrap; \r\n  margin-left: 25px;\r\n  align-items: center;\r\n}\r\n\r\n.status-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* 使所有元素靠右對齊 */\r\n  align-items: center; /* 垂直居中對齊 */\r\n}\r\n\r\n.report-btn {\r\n  background-color: #ff7675;\r\n  color: #fff; \r\n}\r\n\r\n.table-btn {\r\n  background-color:#a29bfe;\r\n  color: #fff; \r\n}\r\n\r\n.loop_tabs {\r\n  border-top: 1px solid #ccc;\r\n  flex-grow: 0; \r\n  flex-shrink: 1; \r\n}\r\n\r\n.loop_tabs .v-btn:hover{\r\n  font-weight: bold;\r\n  border-bottom: 5px solid #FF6F00; \r\n  border-radius: 0;\r\n}\r\n\r\n.tabs {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n}\r\n\r\n.tabs .v-btn:hover{\r\n  font-weight: bold;\r\n  color: #fff;\r\n  background: #00b894; \r\n  border-radius: 0;\r\n}\r\n\r\n.active {\r\n    background-color: #00b894; \r\n    color: white; \r\n}\r\n\r\n\r\n.loop-selection-container {\r\n  margin-left: 25px;\r\n  border-top: 1px solid #ccc;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .loop-selection-container {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n:deep(.v-btn-toggle){\r\n    padding: 2px 30px;\r\n    min-height: auto;\r\n    height: auto;\r\n}\r\n.spacing{\r\n height: 50px;\r\n}\r\n\r\n.table-container {\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 50vh;\r\n  margin-left: 35px;\r\n  margin-right: 25px;\r\n  padding: 10px;\r\n  overflow-x: auto;\r\n  overflow-y: auto;\r\n}\r\n\r\n.overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(255, 255, 255, 0.8); /* 半透明背景 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n \r\n::-webkit-scrollbar-thumb {\r\n   border-radius: 2px;\r\n  background-color: #bdc3c7;\r\n  color: #bdc3c7;\r\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);\r\n}\r\n.project-btn-container{\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 75vh;\r\n  margin-left: 50px;\r\n  padding: 5px;\r\n  background-color: #fff; /* 背景顏色 */\r\n  border: 1px solid #ddd; /* 邊框 */\r\n  border-radius: 10px; /* 圓角邊框 */\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n\r\n.project-btn {\r\n  margin-bottom: 5px; /* 下边距 */\r\n  font-size: 8pt; /* 字体大小 */\r\n  padding: 5px 10px; /* 内部填充 (垂直方向和水平方向) */\r\n  width: 120px; /* 固定宽度 */\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\n</style>\r\n\r\n\r\n","import script from \"./Browse_Project_Progress.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Browse_Project_Progress.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Browse_Project_Progress.vue?vue&type=style&index=0&id=a67743d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a67743d8\"]])\n\nexport default __exports__"],"names":["class","style","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","chartData","required","watch","deep","newData","updateChart","mounted","createChart","methods","$refs","chartCanvas","__exports__","_Fragment","_renderList","$props","headers","header","colspan","rows","_toDisplayString","project_name","_normalizeClass","_hoisted_3","default","log","tableData","isBankMode","_hoisted_4","_hoisted_5","tableBankData","_hoisted_6","Boolean","seasonTableData","isLoading","_createVNode","_component_v_progress_circular","indeterminate","elapsedSeconds","apiClient","axios","baseURL","process","interceptors","request","use","token","localStorage","getItem","Authorization","reject","response","status","location","href","alert","message","fetchPlans","fetchLoops","fetchLoopByPlan","planid","Accept","fetchSeasonWeekTableData","loopId","fetchWeekTableData","fetchWeekBankTableData","fetchSeasonTableData","fetchSeasonProjectChartData","fetchPVProjectByLoopList","__default__","plans","loops","loopsOfSelectedPlan","selectedPlan","selectedLoop","selectedLoopId","activeTab","currentSelection","currentChartSelection","currentView","seasonWeekData","pVProjectByLoopsList","timer","apiError","seasonProjectChartData","originalChartData","assignedHues","stringColorMap","selectedProjects","isSelected","projectName","getButtonStyle","hashStringToColor","toggleProjectSelection","loadDataBasedOnTab","startLoading","fetchDataForLoop","stopLoading","handleApiError","resetTableData","setInterval","clearInterval","fetchData","plansResponse","loopsResponse","fetchSeasonProjectsChartData","processChartData","fetchPVProjectByLoopsList","selectLoop","toggleTab","tabName","toggleMode","toggleView","setCurrentView","view","setCurrentSelection","setCurrentChartSelection","hash","charCodeAt","saturation","lightness","assignColorsToProjects","projectNames","colorMap","rawData","uniqueProjects","processedData","lineTension","computed","is_mobile","$vuetify","xs","toFixed","scaleLabel","labelString","newVal","oldVal","find","filteredData","newValue","immediate","selectedDatasetsLabel","filterChartData","$nextTick"],"sourceRoot":""}