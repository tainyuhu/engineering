{"version":3,"file":"static/js/160.54d60ba6.js","mappings":"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","sources":["webpack://frontend/./src/components/chart/Chart.vue","webpack://frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend/./node_modules/chart.js/dist/chart.js","webpack://frontend/./node_modules/chart.js/auto/auto.js","webpack://frontend/./src/components/chart/Chart.vue?eb38"],"sourcesContent":["<template>\r\n  <div class=\"line-chart-container\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  name: \"Chart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(newData) {\r\n        this.updateChart(newData);\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createChart();\r\n  },\r\n  methods: {\r\n    createChart() {\r\n      const ctx = this.$refs.chartCanvas;\r\n      if (!Chart.getChart(ctx)) {\r\n        // 沒有圖表Instance再新增\r\n        this.chart = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: this.chartData,\r\n          options: this.chartOptions,\r\n        });\r\n      }\r\n    },\r\n    updateChart(newData) {\r\n      if (this.chart) {\r\n        this.chart.data = newData;\r\n        this.chart.update();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  width: 100% !important;\r\n  height: 100% !important;\r\n}\r\n\r\n.line-chart-container {\r\n  position: relative;\r\n  max-width: 100vw;\r\n  max-height: 80vh;\r\n  overflow-x: auto;\r\n  overflow-y: auto;\r\n  margin-right: 25px;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { render } from \"./Chart.vue?vue&type=template&id=3de3f364&scoped=true\"\nimport script from \"./Chart.vue?vue&type=script&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&lang=js\"\n\nimport \"./Chart.vue?vue&type=style&index=0&id=3de3f364&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3de3f364\"]])\n\nexport default __exports__"],"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","chartData","required","watch","deep","newData","updateChart","mounted","createChart","methods","$refs","chartCanvas","__exports__"],"sourceRoot":""}